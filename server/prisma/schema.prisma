// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
  output     = "../src/docs/diagram-dbml"
  outputName = "recipe.dbml"
}

generator custom_generator {
  provider = "prisma-generator-fake-data"
  output   = "../src/mocks/random-mock.ts"
}

model User {
  id               String         @id @default(uuid()) 
  name             String
  email            String         @unique
  image            String?
  password         String
  followers        User[]         @relation(name: "Followers")
  follows          User[]         @relation(name: "Followers")
  recipes          Recipe[]       @relation("RecipeOwner")
  favorites        Recipe[]       @relation("Favorite")
  notifications    Notification[]
  messagesSent     Message[]      @relation("Sent")
  messagesReceived Message[]      @relation("Received")

  @@index([id], name: "IDX_USER_ID", type: Hash)
  @@index([email], name: "IDX_USER_EMAIL", type: Hash)
}

model Recipe {
  id                  String @id @default(uuid())
  ownerId             String
  tagId               String
  name                String
  description         String
  ingredients         String[]
  image               String
  rating              Float
  methodOfPreparation String
  kcal                Int
  owner               User   @relation("RecipeOwner", fields: [ownerId], references: [id])
  favoritesBy         User[] @relation("Favorite")
  tag                 Tag    @relation(fields: [tagId], references: [id])

  @@index([id], name: "IDX_RECIPE_ID", type: Hash)
  @@index([name], name: "IDX_RECIPE_NAME", type: SpGist)

}

model Tag {
  id      String   @id @default(uuid())
  name    String
  image   String
  recipes Recipe[]

  @@index([id], name: "IDX_TAG_ID", type: Hash)
}

model Notification {
  id          String @id @default(uuid())
  image       String
  name        String
  description String
  forUsers    User[]

  @@index([id], name: "IDX_NOTIFICATION_ID", type: Hash)
}

model Message {
  id         String @id @default(uuid())
  senderId   String
  receiverId String
  text       String
  created    Int
  receiver   User   @relation("Received", fields: [receiverId], references: [id])
  sender     User   @relation("Sent", fields: [senderId], references: [id])
  
  @@index([senderId, receiverId], name: "IDX_TALK_ID") // default type: B-Tree
}
